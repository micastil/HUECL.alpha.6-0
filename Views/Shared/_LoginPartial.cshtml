@using HUECL.alpha._6_0.Areas.Identity
@using HUECL.alpha._6_0.Areas.Identity.Data;
@using HUECL.alpha._6_0.Areas.Identity.Pages.Account;
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject ILogger<LoginModel> LoggerManager

@{
    var appUser = await UserManager.GetUserAsync(User);
}

<ul class="navbar-nav">
    @* @if (SignInManager.IsSignedIn(User)) *@
    @if (User.Identity != null && User.Identity.IsAuthenticated && SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            @* <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hola @UserManager.GetUserName(User)!</a> *@
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hola @appUser.Name</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Salir</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Iniciar Sesión</a>
        </li>

    }
</ul>

